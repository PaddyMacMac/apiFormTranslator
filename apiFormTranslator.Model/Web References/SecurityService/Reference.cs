//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace apiFormTranslator.Model.SecurityService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SecurityServiceSoap", Namespace="http://www.prometric.com/webservices/intelitest")]
    public partial class SecurityService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private User userField;
        
        private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToContextOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPasswordComplexityOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsPasswordComplexityValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserContextsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllContextsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserNameMatchesEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPasswordResetEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsValidResetUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserNameMatchesSecurityTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback CleanContextOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsLockedOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SapUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SecureResetUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalUserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserListGivenRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateContextOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateUserInContextOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUsersToContextOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserFromContextOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationRolesIncludingInheritedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRolePermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPermissionsAtLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPermissionsForNonFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFolderRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNonFolderRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateContextAdminRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRolePermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContextNonFolderRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContextAdminRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContextFolderRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignUserToRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserFromRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignRoleToLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveRoleFromLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePermissionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationAdminsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToApplicationAdminsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserFromApplicationAdminsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserApplicationAdminOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SecurityService() {
            this.Url = global::apiFormTranslator.Model.Properties.Settings.Default.apiFormTranslator_Model_SecurityService_SecurityService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public User user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateUserCompletedEventHandler CreateUserCompleted;
        
        /// <remarks/>
        public event AuthenticateUserCompletedEventHandler AuthenticateUserCompleted;
        
        /// <remarks/>
        public event AddUserToContextCompletedEventHandler AddUserToContextCompleted;
        
        /// <remarks/>
        public event GetPasswordComplexityCompletedEventHandler GetPasswordComplexityCompleted;
        
        /// <remarks/>
        public event IsPasswordComplexityValidCompletedEventHandler IsPasswordComplexityValidCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event GetUserContextsCompletedEventHandler GetUserContextsCompleted;
        
        /// <remarks/>
        public event GetAllContextsCompletedEventHandler GetAllContextsCompleted;
        
        /// <remarks/>
        public event UserNameMatchesEmailAddressCompletedEventHandler UserNameMatchesEmailAddressCompleted;
        
        /// <remarks/>
        public event SendPasswordResetEmailCompletedEventHandler SendPasswordResetEmailCompleted;
        
        /// <remarks/>
        public event IsValidResetUrlCompletedEventHandler IsValidResetUrlCompleted;
        
        /// <remarks/>
        public event UserNameMatchesSecurityTokenCompletedEventHandler UserNameMatchesSecurityTokenCompleted;
        
        /// <remarks/>
        public event CleanContextCompletedEventHandler CleanContextCompleted;
        
        /// <remarks/>
        public event IsLockedOutCompletedEventHandler IsLockedOutCompleted;
        
        /// <remarks/>
        public event UnlockUserCompletedEventHandler UnlockUserCompleted;
        
        /// <remarks/>
        public event SapUserCompletedEventHandler SapUserCompleted;
        
        /// <remarks/>
        public event ResetUserPasswordCompletedEventHandler ResetUserPasswordCompleted;
        
        /// <remarks/>
        public event SecureResetUserPasswordCompletedEventHandler SecureResetUserPasswordCompleted;
        
        /// <remarks/>
        public event GetUserListCompletedEventHandler GetUserListCompleted;
        
        /// <remarks/>
        public event GetGlobalUserListCompletedEventHandler GetGlobalUserListCompleted;
        
        /// <remarks/>
        public event GetUserListGivenRoleCompletedEventHandler GetUserListGivenRoleCompleted;
        
        /// <remarks/>
        public event GenerateContextCompletedEventHandler GenerateContextCompleted;
        
        /// <remarks/>
        public event GenerateUserInContextCompletedEventHandler GenerateUserInContextCompleted;
        
        /// <remarks/>
        public event AddUsersToContextCompletedEventHandler AddUsersToContextCompleted;
        
        /// <remarks/>
        public event DeleteUserFromContextCompletedEventHandler DeleteUserFromContextCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event GetLocationRolesCompletedEventHandler GetLocationRolesCompleted;
        
        /// <remarks/>
        public event GetLocationRolesIncludingInheritedCompletedEventHandler GetLocationRolesIncludingInheritedCompleted;
        
        /// <remarks/>
        public event GetRolePermissionsCompletedEventHandler GetRolePermissionsCompleted;
        
        /// <remarks/>
        public event GetUserPermissionsAtLocationCompletedEventHandler GetUserPermissionsAtLocationCompleted;
        
        /// <remarks/>
        public event GetUserPermissionsForNonFoldersCompletedEventHandler GetUserPermissionsForNonFoldersCompleted;
        
        /// <remarks/>
        public event CreateFolderRoleCompletedEventHandler CreateFolderRoleCompleted;
        
        /// <remarks/>
        public event CreateNonFolderRoleCompletedEventHandler CreateNonFolderRoleCompleted;
        
        /// <remarks/>
        public event CreateContextAdminRoleCompletedEventHandler CreateContextAdminRoleCompleted;
        
        /// <remarks/>
        public event SetRolePermissionsCompletedEventHandler SetRolePermissionsCompleted;
        
        /// <remarks/>
        public event DeleteRoleCompletedEventHandler DeleteRoleCompleted;
        
        /// <remarks/>
        public event GetContextNonFolderRolesCompletedEventHandler GetContextNonFolderRolesCompleted;
        
        /// <remarks/>
        public event GetContextAdminRolesCompletedEventHandler GetContextAdminRolesCompleted;
        
        /// <remarks/>
        public event GetContextFolderRolesCompletedEventHandler GetContextFolderRolesCompleted;
        
        /// <remarks/>
        public event AssignUserToRoleCompletedEventHandler AssignUserToRoleCompleted;
        
        /// <remarks/>
        public event RemoveUserFromRoleCompletedEventHandler RemoveUserFromRoleCompleted;
        
        /// <remarks/>
        public event AssignRoleToLocationCompletedEventHandler AssignRoleToLocationCompleted;
        
        /// <remarks/>
        public event RemoveRoleFromLocationCompletedEventHandler RemoveRoleFromLocationCompleted;
        
        /// <remarks/>
        public event GeneratePermissionListCompletedEventHandler GeneratePermissionListCompleted;
        
        /// <remarks/>
        public event GetApplicationAdminsCompletedEventHandler GetApplicationAdminsCompleted;
        
        /// <remarks/>
        public event AddUserToApplicationAdminsCompletedEventHandler AddUserToApplicationAdminsCompleted;
        
        /// <remarks/>
        public event RemoveUserFromApplicationAdminsCompletedEventHandler RemoveUserFromApplicationAdminsCompleted;
        
        /// <remarks/>
        public event IsUserApplicationAdminCompletedEventHandler IsUserApplicationAdminCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/CreateUser", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("user", IsNullable=true)]
        public User CreateUser(string userName, string password, string email, string firstName, string lastName) {
            object[] results = this.Invoke("CreateUser", new object[] {
                        userName,
                        password,
                        email,
                        firstName,
                        lastName});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserAsync(string userName, string password, string email, string firstName, string lastName) {
            this.CreateUserAsync(userName, password, email, firstName, lastName, null);
        }
        
        /// <remarks/>
        public void CreateUserAsync(string userName, string password, string email, string firstName, string lastName, object userState) {
            if ((this.CreateUserOperationCompleted == null)) {
                this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
            }
            this.InvokeAsync("CreateUser", new object[] {
                        userName,
                        password,
                        email,
                        firstName,
                        lastName}, this.CreateUserOperationCompleted, userState);
        }
        
        private void OnCreateUserOperationCompleted(object arg) {
            if ((this.CreateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/AuthenticateUser", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("user", IsNullable=true)]
        public User AuthenticateUser(string userName, string password, out bool passwordExpiringSoon, out int passwordWillExpireInDays) {
            object[] results = this.Invoke("AuthenticateUser", new object[] {
                        userName,
                        password});
            passwordExpiringSoon = ((bool)(results[1]));
            passwordWillExpireInDays = ((int)(results[2]));
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string userName, string password) {
            this.AuthenticateUserAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string userName, string password, object userState) {
            if ((this.AuthenticateUserOperationCompleted == null)) {
                this.AuthenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser", new object[] {
                        userName,
                        password}, this.AuthenticateUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserOperationCompleted(object arg) {
            if ((this.AuthenticateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/AddUserToContext", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUserToContext(string userId, string contextId) {
            this.Invoke("AddUserToContext", new object[] {
                        userId,
                        contextId});
        }
        
        /// <remarks/>
        public void AddUserToContextAsync(string userId, string contextId) {
            this.AddUserToContextAsync(userId, contextId, null);
        }
        
        /// <remarks/>
        public void AddUserToContextAsync(string userId, string contextId, object userState) {
            if ((this.AddUserToContextOperationCompleted == null)) {
                this.AddUserToContextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToContextOperationCompleted);
            }
            this.InvokeAsync("AddUserToContext", new object[] {
                        userId,
                        contextId}, this.AddUserToContextOperationCompleted, userState);
        }
        
        private void OnAddUserToContextOperationCompleted(object arg) {
            if ((this.AddUserToContextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToContextCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetPasswordComplexity", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPasswordComplexity(out int minRequiredNonalphanumericCharacters, out int minRequiredPasswordLength) {
            object[] results = this.Invoke("GetPasswordComplexity", new object[0]);
            minRequiredNonalphanumericCharacters = ((int)(results[1]));
            minRequiredPasswordLength = ((int)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPasswordComplexityAsync() {
            this.GetPasswordComplexityAsync(null);
        }
        
        /// <remarks/>
        public void GetPasswordComplexityAsync(object userState) {
            if ((this.GetPasswordComplexityOperationCompleted == null)) {
                this.GetPasswordComplexityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordComplexityOperationCompleted);
            }
            this.InvokeAsync("GetPasswordComplexity", new object[0], this.GetPasswordComplexityOperationCompleted, userState);
        }
        
        private void OnGetPasswordComplexityOperationCompleted(object arg) {
            if ((this.GetPasswordComplexityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPasswordComplexityCompleted(this, new GetPasswordComplexityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/IsPasswordComplexityValid", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PasswordComplexity IsPasswordComplexityValid(string Password) {
            object[] results = this.Invoke("IsPasswordComplexityValid", new object[] {
                        Password});
            return ((PasswordComplexity)(results[0]));
        }
        
        /// <remarks/>
        public void IsPasswordComplexityValidAsync(string Password) {
            this.IsPasswordComplexityValidAsync(Password, null);
        }
        
        /// <remarks/>
        public void IsPasswordComplexityValidAsync(string Password, object userState) {
            if ((this.IsPasswordComplexityValidOperationCompleted == null)) {
                this.IsPasswordComplexityValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsPasswordComplexityValidOperationCompleted);
            }
            this.InvokeAsync("IsPasswordComplexityValid", new object[] {
                        Password}, this.IsPasswordComplexityValidOperationCompleted, userState);
        }
        
        private void OnIsPasswordComplexityValidOperationCompleted(object arg) {
            if ((this.IsPasswordComplexityValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsPasswordComplexityValidCompleted(this, new IsPasswordComplexityValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/ChangePassword", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChangePassword(string userName, string oldPassword, string newPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        userName,
                        oldPassword,
                        newPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string userName, string oldPassword, string newPassword) {
            this.ChangePasswordAsync(userName, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string userName, string oldPassword, string newPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        userName,
                        oldPassword,
                        newPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetUserContexts", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Context[] GetUserContexts() {
            object[] results = this.Invoke("GetUserContexts", new object[0]);
            return ((Context[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserContextsAsync() {
            this.GetUserContextsAsync(null);
        }
        
        /// <remarks/>
        public void GetUserContextsAsync(object userState) {
            if ((this.GetUserContextsOperationCompleted == null)) {
                this.GetUserContextsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserContextsOperationCompleted);
            }
            this.InvokeAsync("GetUserContexts", new object[0], this.GetUserContextsOperationCompleted, userState);
        }
        
        private void OnGetUserContextsOperationCompleted(object arg) {
            if ((this.GetUserContextsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserContextsCompleted(this, new GetUserContextsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetAllContexts", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Context[] GetAllContexts() {
            object[] results = this.Invoke("GetAllContexts", new object[0]);
            return ((Context[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllContextsAsync() {
            this.GetAllContextsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllContextsAsync(object userState) {
            if ((this.GetAllContextsOperationCompleted == null)) {
                this.GetAllContextsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllContextsOperationCompleted);
            }
            this.InvokeAsync("GetAllContexts", new object[0], this.GetAllContextsOperationCompleted, userState);
        }
        
        private void OnGetAllContextsOperationCompleted(object arg) {
            if ((this.GetAllContextsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllContextsCompleted(this, new GetAllContextsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/UserNameMatchesEmailAddress", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserNameMatchesEmailAddress(string userName, string email) {
            object[] results = this.Invoke("UserNameMatchesEmailAddress", new object[] {
                        userName,
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserNameMatchesEmailAddressAsync(string userName, string email) {
            this.UserNameMatchesEmailAddressAsync(userName, email, null);
        }
        
        /// <remarks/>
        public void UserNameMatchesEmailAddressAsync(string userName, string email, object userState) {
            if ((this.UserNameMatchesEmailAddressOperationCompleted == null)) {
                this.UserNameMatchesEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserNameMatchesEmailAddressOperationCompleted);
            }
            this.InvokeAsync("UserNameMatchesEmailAddress", new object[] {
                        userName,
                        email}, this.UserNameMatchesEmailAddressOperationCompleted, userState);
        }
        
        private void OnUserNameMatchesEmailAddressOperationCompleted(object arg) {
            if ((this.UserNameMatchesEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserNameMatchesEmailAddressCompleted(this, new UserNameMatchesEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/SendPasswordResetEmail", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendPasswordResetEmail(string UserName, string IPAddress, string ResetPageUri) {
            this.Invoke("SendPasswordResetEmail", new object[] {
                        UserName,
                        IPAddress,
                        ResetPageUri});
        }
        
        /// <remarks/>
        public void SendPasswordResetEmailAsync(string UserName, string IPAddress, string ResetPageUri) {
            this.SendPasswordResetEmailAsync(UserName, IPAddress, ResetPageUri, null);
        }
        
        /// <remarks/>
        public void SendPasswordResetEmailAsync(string UserName, string IPAddress, string ResetPageUri, object userState) {
            if ((this.SendPasswordResetEmailOperationCompleted == null)) {
                this.SendPasswordResetEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPasswordResetEmailOperationCompleted);
            }
            this.InvokeAsync("SendPasswordResetEmail", new object[] {
                        UserName,
                        IPAddress,
                        ResetPageUri}, this.SendPasswordResetEmailOperationCompleted, userState);
        }
        
        private void OnSendPasswordResetEmailOperationCompleted(object arg) {
            if ((this.SendPasswordResetEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPasswordResetEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/IsValidResetUrl", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidResetUrl(string TokenQuery) {
            object[] results = this.Invoke("IsValidResetUrl", new object[] {
                        TokenQuery});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsValidResetUrlAsync(string TokenQuery) {
            this.IsValidResetUrlAsync(TokenQuery, null);
        }
        
        /// <remarks/>
        public void IsValidResetUrlAsync(string TokenQuery, object userState) {
            if ((this.IsValidResetUrlOperationCompleted == null)) {
                this.IsValidResetUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidResetUrlOperationCompleted);
            }
            this.InvokeAsync("IsValidResetUrl", new object[] {
                        TokenQuery}, this.IsValidResetUrlOperationCompleted, userState);
        }
        
        private void OnIsValidResetUrlOperationCompleted(object arg) {
            if ((this.IsValidResetUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidResetUrlCompleted(this, new IsValidResetUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/UserNameMatchesSecurityToken", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserNameMatchesSecurityToken(string TokenQuery, string UserName) {
            object[] results = this.Invoke("UserNameMatchesSecurityToken", new object[] {
                        TokenQuery,
                        UserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserNameMatchesSecurityTokenAsync(string TokenQuery, string UserName) {
            this.UserNameMatchesSecurityTokenAsync(TokenQuery, UserName, null);
        }
        
        /// <remarks/>
        public void UserNameMatchesSecurityTokenAsync(string TokenQuery, string UserName, object userState) {
            if ((this.UserNameMatchesSecurityTokenOperationCompleted == null)) {
                this.UserNameMatchesSecurityTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserNameMatchesSecurityTokenOperationCompleted);
            }
            this.InvokeAsync("UserNameMatchesSecurityToken", new object[] {
                        TokenQuery,
                        UserName}, this.UserNameMatchesSecurityTokenOperationCompleted, userState);
        }
        
        private void OnUserNameMatchesSecurityTokenOperationCompleted(object arg) {
            if ((this.UserNameMatchesSecurityTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserNameMatchesSecurityTokenCompleted(this, new UserNameMatchesSecurityTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/CleanContext", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CleanContext(string contextName, string contextID, bool IsSoftDelete) {
            object[] results = this.Invoke("CleanContext", new object[] {
                        contextName,
                        contextID,
                        IsSoftDelete});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CleanContextAsync(string contextName, string contextID, bool IsSoftDelete) {
            this.CleanContextAsync(contextName, contextID, IsSoftDelete, null);
        }
        
        /// <remarks/>
        public void CleanContextAsync(string contextName, string contextID, bool IsSoftDelete, object userState) {
            if ((this.CleanContextOperationCompleted == null)) {
                this.CleanContextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCleanContextOperationCompleted);
            }
            this.InvokeAsync("CleanContext", new object[] {
                        contextName,
                        contextID,
                        IsSoftDelete}, this.CleanContextOperationCompleted, userState);
        }
        
        private void OnCleanContextOperationCompleted(object arg) {
            if ((this.CleanContextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CleanContextCompleted(this, new CleanContextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/IsLockedOut", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsLockedOut([System.Xml.Serialization.XmlElementAttribute("user", IsNullable=true)] User user1) {
            object[] results = this.Invoke("IsLockedOut", new object[] {
                        user1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsLockedOutAsync(User user1) {
            this.IsLockedOutAsync(user1, null);
        }
        
        /// <remarks/>
        public void IsLockedOutAsync(User user1, object userState) {
            if ((this.IsLockedOutOperationCompleted == null)) {
                this.IsLockedOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLockedOutOperationCompleted);
            }
            this.InvokeAsync("IsLockedOut", new object[] {
                        user1}, this.IsLockedOutOperationCompleted, userState);
        }
        
        private void OnIsLockedOutOperationCompleted(object arg) {
            if ((this.IsLockedOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsLockedOutCompleted(this, new IsLockedOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/UnlockUser", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnlockUser([System.Xml.Serialization.XmlElementAttribute("user", IsNullable=true)] User user1) {
            this.Invoke("UnlockUser", new object[] {
                        user1});
        }
        
        /// <remarks/>
        public void UnlockUserAsync(User user1) {
            this.UnlockUserAsync(user1, null);
        }
        
        /// <remarks/>
        public void UnlockUserAsync(User user1, object userState) {
            if ((this.UnlockUserOperationCompleted == null)) {
                this.UnlockUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockUserOperationCompleted);
            }
            this.InvokeAsync("UnlockUser", new object[] {
                        user1}, this.UnlockUserOperationCompleted, userState);
        }
        
        private void OnUnlockUserOperationCompleted(object arg) {
            if ((this.UnlockUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/SapUser", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SapUser([System.Xml.Serialization.XmlElementAttribute("user", IsNullable=true)] User user1) {
            this.Invoke("SapUser", new object[] {
                        user1});
        }
        
        /// <remarks/>
        public void SapUserAsync(User user1) {
            this.SapUserAsync(user1, null);
        }
        
        /// <remarks/>
        public void SapUserAsync(User user1, object userState) {
            if ((this.SapUserOperationCompleted == null)) {
                this.SapUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSapUserOperationCompleted);
            }
            this.InvokeAsync("SapUser", new object[] {
                        user1}, this.SapUserOperationCompleted, userState);
        }
        
        private void OnSapUserOperationCompleted(object arg) {
            if ((this.SapUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SapUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/ResetUserPassword", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetUserPassword([System.Xml.Serialization.XmlElementAttribute("user", IsNullable=true)] User user1, string newPassword) {
            this.Invoke("ResetUserPassword", new object[] {
                        user1,
                        newPassword});
        }
        
        /// <remarks/>
        public void ResetUserPasswordAsync(User user1, string newPassword) {
            this.ResetUserPasswordAsync(user1, newPassword, null);
        }
        
        /// <remarks/>
        public void ResetUserPasswordAsync(User user1, string newPassword, object userState) {
            if ((this.ResetUserPasswordOperationCompleted == null)) {
                this.ResetUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetUserPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetUserPassword", new object[] {
                        user1,
                        newPassword}, this.ResetUserPasswordOperationCompleted, userState);
        }
        
        private void OnResetUserPasswordOperationCompleted(object arg) {
            if ((this.ResetUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetUserPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/SecureResetUserPassword", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SecureResetUserPassword(string UserName, string NewPassword, string ResetToken) {
            this.Invoke("SecureResetUserPassword", new object[] {
                        UserName,
                        NewPassword,
                        ResetToken});
        }
        
        /// <remarks/>
        public void SecureResetUserPasswordAsync(string UserName, string NewPassword, string ResetToken) {
            this.SecureResetUserPasswordAsync(UserName, NewPassword, ResetToken, null);
        }
        
        /// <remarks/>
        public void SecureResetUserPasswordAsync(string UserName, string NewPassword, string ResetToken, object userState) {
            if ((this.SecureResetUserPasswordOperationCompleted == null)) {
                this.SecureResetUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSecureResetUserPasswordOperationCompleted);
            }
            this.InvokeAsync("SecureResetUserPassword", new object[] {
                        UserName,
                        NewPassword,
                        ResetToken}, this.SecureResetUserPasswordOperationCompleted, userState);
        }
        
        private void OnSecureResetUserPasswordOperationCompleted(object arg) {
            if ((this.SecureResetUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SecureResetUserPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetUserList", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserWithDemographics[] GetUserList() {
            object[] results = this.Invoke("GetUserList", new object[0]);
            return ((UserWithDemographics[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserListAsync() {
            this.GetUserListAsync(null);
        }
        
        /// <remarks/>
        public void GetUserListAsync(object userState) {
            if ((this.GetUserListOperationCompleted == null)) {
                this.GetUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserListOperationCompleted);
            }
            this.InvokeAsync("GetUserList", new object[0], this.GetUserListOperationCompleted, userState);
        }
        
        private void OnGetUserListOperationCompleted(object arg) {
            if ((this.GetUserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserListCompleted(this, new GetUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetGlobalUserList", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserWithDemographics[] GetGlobalUserList() {
            object[] results = this.Invoke("GetGlobalUserList", new object[0]);
            return ((UserWithDemographics[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalUserListAsync() {
            this.GetGlobalUserListAsync(null);
        }
        
        /// <remarks/>
        public void GetGlobalUserListAsync(object userState) {
            if ((this.GetGlobalUserListOperationCompleted == null)) {
                this.GetGlobalUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalUserListOperationCompleted);
            }
            this.InvokeAsync("GetGlobalUserList", new object[0], this.GetGlobalUserListOperationCompleted, userState);
        }
        
        private void OnGetGlobalUserListOperationCompleted(object arg) {
            if ((this.GetGlobalUserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalUserListCompleted(this, new GetGlobalUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetUserListGivenRole", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserWithDemographics[] GetUserListGivenRole(string roleId) {
            object[] results = this.Invoke("GetUserListGivenRole", new object[] {
                        roleId});
            return ((UserWithDemographics[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserListGivenRoleAsync(string roleId) {
            this.GetUserListGivenRoleAsync(roleId, null);
        }
        
        /// <remarks/>
        public void GetUserListGivenRoleAsync(string roleId, object userState) {
            if ((this.GetUserListGivenRoleOperationCompleted == null)) {
                this.GetUserListGivenRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserListGivenRoleOperationCompleted);
            }
            this.InvokeAsync("GetUserListGivenRole", new object[] {
                        roleId}, this.GetUserListGivenRoleOperationCompleted, userState);
        }
        
        private void OnGetUserListGivenRoleOperationCompleted(object arg) {
            if ((this.GetUserListGivenRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserListGivenRoleCompleted(this, new GetUserListGivenRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GenerateContext", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GenerateContext(string contextNameToGenerate, string contentFolderName, string ICSFolderName) {
            object[] results = this.Invoke("GenerateContext", new object[] {
                        contextNameToGenerate,
                        contentFolderName,
                        ICSFolderName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateContextAsync(string contextNameToGenerate, string contentFolderName, string ICSFolderName) {
            this.GenerateContextAsync(contextNameToGenerate, contentFolderName, ICSFolderName, null);
        }
        
        /// <remarks/>
        public void GenerateContextAsync(string contextNameToGenerate, string contentFolderName, string ICSFolderName, object userState) {
            if ((this.GenerateContextOperationCompleted == null)) {
                this.GenerateContextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateContextOperationCompleted);
            }
            this.InvokeAsync("GenerateContext", new object[] {
                        contextNameToGenerate,
                        contentFolderName,
                        ICSFolderName}, this.GenerateContextOperationCompleted, userState);
        }
        
        private void OnGenerateContextOperationCompleted(object arg) {
            if ((this.GenerateContextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateContextCompleted(this, new GenerateContextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GenerateUserInContext", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GenerateUserInContext(string userName, string contextName) {
            object[] results = this.Invoke("GenerateUserInContext", new object[] {
                        userName,
                        contextName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateUserInContextAsync(string userName, string contextName) {
            this.GenerateUserInContextAsync(userName, contextName, null);
        }
        
        /// <remarks/>
        public void GenerateUserInContextAsync(string userName, string contextName, object userState) {
            if ((this.GenerateUserInContextOperationCompleted == null)) {
                this.GenerateUserInContextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateUserInContextOperationCompleted);
            }
            this.InvokeAsync("GenerateUserInContext", new object[] {
                        userName,
                        contextName}, this.GenerateUserInContextOperationCompleted, userState);
        }
        
        private void OnGenerateUserInContextOperationCompleted(object arg) {
            if ((this.GenerateUserInContextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateUserInContextCompleted(this, new GenerateUserInContextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/AddUsersToContext", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] AddUsersToContext(string[] UserNames, string contextName) {
            object[] results = this.Invoke("AddUsersToContext", new object[] {
                        UserNames,
                        contextName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void AddUsersToContextAsync(string[] UserNames, string contextName) {
            this.AddUsersToContextAsync(UserNames, contextName, null);
        }
        
        /// <remarks/>
        public void AddUsersToContextAsync(string[] UserNames, string contextName, object userState) {
            if ((this.AddUsersToContextOperationCompleted == null)) {
                this.AddUsersToContextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUsersToContextOperationCompleted);
            }
            this.InvokeAsync("AddUsersToContext", new object[] {
                        UserNames,
                        contextName}, this.AddUsersToContextOperationCompleted, userState);
        }
        
        private void OnAddUsersToContextOperationCompleted(object arg) {
            if ((this.AddUsersToContextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUsersToContextCompleted(this, new AddUsersToContextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/DeleteUserFromContext", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteUserFromContext(string userName, string contextName) {
            object[] results = this.Invoke("DeleteUserFromContext", new object[] {
                        userName,
                        contextName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserFromContextAsync(string userName, string contextName) {
            this.DeleteUserFromContextAsync(userName, contextName, null);
        }
        
        /// <remarks/>
        public void DeleteUserFromContextAsync(string userName, string contextName, object userState) {
            if ((this.DeleteUserFromContextOperationCompleted == null)) {
                this.DeleteUserFromContextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserFromContextOperationCompleted);
            }
            this.InvokeAsync("DeleteUserFromContext", new object[] {
                        userName,
                        contextName}, this.DeleteUserFromContextOperationCompleted, userState);
        }
        
        private void OnDeleteUserFromContextOperationCompleted(object arg) {
            if ((this.DeleteUserFromContextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserFromContextCompleted(this, new DeleteUserFromContextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/UpdateUser", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUser(KeyValuePairSerializable[] updatedDemographics) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        updatedDemographics});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(KeyValuePairSerializable[] updatedDemographics) {
            this.UpdateUserAsync(updatedDemographics, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(KeyValuePairSerializable[] updatedDemographics, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        updatedDemographics}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetLocationRoles", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] GetLocationRoles(string locationId) {
            object[] results = this.Invoke("GetLocationRoles", new object[] {
                        locationId});
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationRolesAsync(string locationId) {
            this.GetLocationRolesAsync(locationId, null);
        }
        
        /// <remarks/>
        public void GetLocationRolesAsync(string locationId, object userState) {
            if ((this.GetLocationRolesOperationCompleted == null)) {
                this.GetLocationRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationRolesOperationCompleted);
            }
            this.InvokeAsync("GetLocationRoles", new object[] {
                        locationId}, this.GetLocationRolesOperationCompleted, userState);
        }
        
        private void OnGetLocationRolesOperationCompleted(object arg) {
            if ((this.GetLocationRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationRolesCompleted(this, new GetLocationRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetLocationRolesIncludingInherite" +
            "d", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] GetLocationRolesIncludingInherited(string locationId) {
            object[] results = this.Invoke("GetLocationRolesIncludingInherited", new object[] {
                        locationId});
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationRolesIncludingInheritedAsync(string locationId) {
            this.GetLocationRolesIncludingInheritedAsync(locationId, null);
        }
        
        /// <remarks/>
        public void GetLocationRolesIncludingInheritedAsync(string locationId, object userState) {
            if ((this.GetLocationRolesIncludingInheritedOperationCompleted == null)) {
                this.GetLocationRolesIncludingInheritedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationRolesIncludingInheritedOperationCompleted);
            }
            this.InvokeAsync("GetLocationRolesIncludingInherited", new object[] {
                        locationId}, this.GetLocationRolesIncludingInheritedOperationCompleted, userState);
        }
        
        private void OnGetLocationRolesIncludingInheritedOperationCompleted(object arg) {
            if ((this.GetLocationRolesIncludingInheritedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationRolesIncludingInheritedCompleted(this, new GetLocationRolesIncludingInheritedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetRolePermissions", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionDefinition[] GetRolePermissions(string roleId) {
            object[] results = this.Invoke("GetRolePermissions", new object[] {
                        roleId});
            return ((PermissionDefinition[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRolePermissionsAsync(string roleId) {
            this.GetRolePermissionsAsync(roleId, null);
        }
        
        /// <remarks/>
        public void GetRolePermissionsAsync(string roleId, object userState) {
            if ((this.GetRolePermissionsOperationCompleted == null)) {
                this.GetRolePermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRolePermissionsOperationCompleted);
            }
            this.InvokeAsync("GetRolePermissions", new object[] {
                        roleId}, this.GetRolePermissionsOperationCompleted, userState);
        }
        
        private void OnGetRolePermissionsOperationCompleted(object arg) {
            if ((this.GetRolePermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRolePermissionsCompleted(this, new GetRolePermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetUserPermissionsAtLocation", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionDefinition[] GetUserPermissionsAtLocation([System.Xml.Serialization.XmlElementAttribute("user", IsNullable=true)] User user1, string locationId) {
            object[] results = this.Invoke("GetUserPermissionsAtLocation", new object[] {
                        user1,
                        locationId});
            return ((PermissionDefinition[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPermissionsAtLocationAsync(User user1, string locationId) {
            this.GetUserPermissionsAtLocationAsync(user1, locationId, null);
        }
        
        /// <remarks/>
        public void GetUserPermissionsAtLocationAsync(User user1, string locationId, object userState) {
            if ((this.GetUserPermissionsAtLocationOperationCompleted == null)) {
                this.GetUserPermissionsAtLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPermissionsAtLocationOperationCompleted);
            }
            this.InvokeAsync("GetUserPermissionsAtLocation", new object[] {
                        user1,
                        locationId}, this.GetUserPermissionsAtLocationOperationCompleted, userState);
        }
        
        private void OnGetUserPermissionsAtLocationOperationCompleted(object arg) {
            if ((this.GetUserPermissionsAtLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPermissionsAtLocationCompleted(this, new GetUserPermissionsAtLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetUserPermissionsForNonFolders", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionDefinition[] GetUserPermissionsForNonFolders([System.Xml.Serialization.XmlElementAttribute("user", IsNullable=true)] User user1) {
            object[] results = this.Invoke("GetUserPermissionsForNonFolders", new object[] {
                        user1});
            return ((PermissionDefinition[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPermissionsForNonFoldersAsync(User user1) {
            this.GetUserPermissionsForNonFoldersAsync(user1, null);
        }
        
        /// <remarks/>
        public void GetUserPermissionsForNonFoldersAsync(User user1, object userState) {
            if ((this.GetUserPermissionsForNonFoldersOperationCompleted == null)) {
                this.GetUserPermissionsForNonFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPermissionsForNonFoldersOperationCompleted);
            }
            this.InvokeAsync("GetUserPermissionsForNonFolders", new object[] {
                        user1}, this.GetUserPermissionsForNonFoldersOperationCompleted, userState);
        }
        
        private void OnGetUserPermissionsForNonFoldersOperationCompleted(object arg) {
            if ((this.GetUserPermissionsForNonFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPermissionsForNonFoldersCompleted(this, new GetUserPermissionsForNonFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/CreateFolderRole", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role CreateFolderRole(string roleName) {
            object[] results = this.Invoke("CreateFolderRole", new object[] {
                        roleName});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFolderRoleAsync(string roleName) {
            this.CreateFolderRoleAsync(roleName, null);
        }
        
        /// <remarks/>
        public void CreateFolderRoleAsync(string roleName, object userState) {
            if ((this.CreateFolderRoleOperationCompleted == null)) {
                this.CreateFolderRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFolderRoleOperationCompleted);
            }
            this.InvokeAsync("CreateFolderRole", new object[] {
                        roleName}, this.CreateFolderRoleOperationCompleted, userState);
        }
        
        private void OnCreateFolderRoleOperationCompleted(object arg) {
            if ((this.CreateFolderRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFolderRoleCompleted(this, new CreateFolderRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/CreateNonFolderRole", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role CreateNonFolderRole(string roleName) {
            object[] results = this.Invoke("CreateNonFolderRole", new object[] {
                        roleName});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNonFolderRoleAsync(string roleName) {
            this.CreateNonFolderRoleAsync(roleName, null);
        }
        
        /// <remarks/>
        public void CreateNonFolderRoleAsync(string roleName, object userState) {
            if ((this.CreateNonFolderRoleOperationCompleted == null)) {
                this.CreateNonFolderRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNonFolderRoleOperationCompleted);
            }
            this.InvokeAsync("CreateNonFolderRole", new object[] {
                        roleName}, this.CreateNonFolderRoleOperationCompleted, userState);
        }
        
        private void OnCreateNonFolderRoleOperationCompleted(object arg) {
            if ((this.CreateNonFolderRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNonFolderRoleCompleted(this, new CreateNonFolderRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/CreateContextAdminRole", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role CreateContextAdminRole(string roleName) {
            object[] results = this.Invoke("CreateContextAdminRole", new object[] {
                        roleName});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void CreateContextAdminRoleAsync(string roleName) {
            this.CreateContextAdminRoleAsync(roleName, null);
        }
        
        /// <remarks/>
        public void CreateContextAdminRoleAsync(string roleName, object userState) {
            if ((this.CreateContextAdminRoleOperationCompleted == null)) {
                this.CreateContextAdminRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateContextAdminRoleOperationCompleted);
            }
            this.InvokeAsync("CreateContextAdminRole", new object[] {
                        roleName}, this.CreateContextAdminRoleOperationCompleted, userState);
        }
        
        private void OnCreateContextAdminRoleOperationCompleted(object arg) {
            if ((this.CreateContextAdminRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateContextAdminRoleCompleted(this, new CreateContextAdminRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/SetRolePermissions", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetRolePermissions(string roleId, PermissionDefinition[] permissions) {
            this.Invoke("SetRolePermissions", new object[] {
                        roleId,
                        permissions});
        }
        
        /// <remarks/>
        public void SetRolePermissionsAsync(string roleId, PermissionDefinition[] permissions) {
            this.SetRolePermissionsAsync(roleId, permissions, null);
        }
        
        /// <remarks/>
        public void SetRolePermissionsAsync(string roleId, PermissionDefinition[] permissions, object userState) {
            if ((this.SetRolePermissionsOperationCompleted == null)) {
                this.SetRolePermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRolePermissionsOperationCompleted);
            }
            this.InvokeAsync("SetRolePermissions", new object[] {
                        roleId,
                        permissions}, this.SetRolePermissionsOperationCompleted, userState);
        }
        
        private void OnSetRolePermissionsOperationCompleted(object arg) {
            if ((this.SetRolePermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRolePermissionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/DeleteRole", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRole(string roleId) {
            this.Invoke("DeleteRole", new object[] {
                        roleId});
        }
        
        /// <remarks/>
        public void DeleteRoleAsync(string roleId) {
            this.DeleteRoleAsync(roleId, null);
        }
        
        /// <remarks/>
        public void DeleteRoleAsync(string roleId, object userState) {
            if ((this.DeleteRoleOperationCompleted == null)) {
                this.DeleteRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRoleOperationCompleted);
            }
            this.InvokeAsync("DeleteRole", new object[] {
                        roleId}, this.DeleteRoleOperationCompleted, userState);
        }
        
        private void OnDeleteRoleOperationCompleted(object arg) {
            if ((this.DeleteRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetContextNonFolderRoles", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] GetContextNonFolderRoles() {
            object[] results = this.Invoke("GetContextNonFolderRoles", new object[0]);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void GetContextNonFolderRolesAsync() {
            this.GetContextNonFolderRolesAsync(null);
        }
        
        /// <remarks/>
        public void GetContextNonFolderRolesAsync(object userState) {
            if ((this.GetContextNonFolderRolesOperationCompleted == null)) {
                this.GetContextNonFolderRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContextNonFolderRolesOperationCompleted);
            }
            this.InvokeAsync("GetContextNonFolderRoles", new object[0], this.GetContextNonFolderRolesOperationCompleted, userState);
        }
        
        private void OnGetContextNonFolderRolesOperationCompleted(object arg) {
            if ((this.GetContextNonFolderRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContextNonFolderRolesCompleted(this, new GetContextNonFolderRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetContextAdminRoles", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] GetContextAdminRoles() {
            object[] results = this.Invoke("GetContextAdminRoles", new object[0]);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void GetContextAdminRolesAsync() {
            this.GetContextAdminRolesAsync(null);
        }
        
        /// <remarks/>
        public void GetContextAdminRolesAsync(object userState) {
            if ((this.GetContextAdminRolesOperationCompleted == null)) {
                this.GetContextAdminRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContextAdminRolesOperationCompleted);
            }
            this.InvokeAsync("GetContextAdminRoles", new object[0], this.GetContextAdminRolesOperationCompleted, userState);
        }
        
        private void OnGetContextAdminRolesOperationCompleted(object arg) {
            if ((this.GetContextAdminRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContextAdminRolesCompleted(this, new GetContextAdminRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetContextFolderRoles", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] GetContextFolderRoles() {
            object[] results = this.Invoke("GetContextFolderRoles", new object[0]);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void GetContextFolderRolesAsync() {
            this.GetContextFolderRolesAsync(null);
        }
        
        /// <remarks/>
        public void GetContextFolderRolesAsync(object userState) {
            if ((this.GetContextFolderRolesOperationCompleted == null)) {
                this.GetContextFolderRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContextFolderRolesOperationCompleted);
            }
            this.InvokeAsync("GetContextFolderRoles", new object[0], this.GetContextFolderRolesOperationCompleted, userState);
        }
        
        private void OnGetContextFolderRolesOperationCompleted(object arg) {
            if ((this.GetContextFolderRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContextFolderRolesCompleted(this, new GetContextFolderRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/AssignUserToRole", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AssignUserToRole(string userId, string roleId) {
            this.Invoke("AssignUserToRole", new object[] {
                        userId,
                        roleId});
        }
        
        /// <remarks/>
        public void AssignUserToRoleAsync(string userId, string roleId) {
            this.AssignUserToRoleAsync(userId, roleId, null);
        }
        
        /// <remarks/>
        public void AssignUserToRoleAsync(string userId, string roleId, object userState) {
            if ((this.AssignUserToRoleOperationCompleted == null)) {
                this.AssignUserToRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignUserToRoleOperationCompleted);
            }
            this.InvokeAsync("AssignUserToRole", new object[] {
                        userId,
                        roleId}, this.AssignUserToRoleOperationCompleted, userState);
        }
        
        private void OnAssignUserToRoleOperationCompleted(object arg) {
            if ((this.AssignUserToRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignUserToRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/RemoveUserFromRole", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveUserFromRole(string userId, string roleId) {
            this.Invoke("RemoveUserFromRole", new object[] {
                        userId,
                        roleId});
        }
        
        /// <remarks/>
        public void RemoveUserFromRoleAsync(string userId, string roleId) {
            this.RemoveUserFromRoleAsync(userId, roleId, null);
        }
        
        /// <remarks/>
        public void RemoveUserFromRoleAsync(string userId, string roleId, object userState) {
            if ((this.RemoveUserFromRoleOperationCompleted == null)) {
                this.RemoveUserFromRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserFromRoleOperationCompleted);
            }
            this.InvokeAsync("RemoveUserFromRole", new object[] {
                        userId,
                        roleId}, this.RemoveUserFromRoleOperationCompleted, userState);
        }
        
        private void OnRemoveUserFromRoleOperationCompleted(object arg) {
            if ((this.RemoveUserFromRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserFromRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/AssignRoleToLocation", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AssignRoleToLocation(string locationId, string roleId) {
            this.Invoke("AssignRoleToLocation", new object[] {
                        locationId,
                        roleId});
        }
        
        /// <remarks/>
        public void AssignRoleToLocationAsync(string locationId, string roleId) {
            this.AssignRoleToLocationAsync(locationId, roleId, null);
        }
        
        /// <remarks/>
        public void AssignRoleToLocationAsync(string locationId, string roleId, object userState) {
            if ((this.AssignRoleToLocationOperationCompleted == null)) {
                this.AssignRoleToLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignRoleToLocationOperationCompleted);
            }
            this.InvokeAsync("AssignRoleToLocation", new object[] {
                        locationId,
                        roleId}, this.AssignRoleToLocationOperationCompleted, userState);
        }
        
        private void OnAssignRoleToLocationOperationCompleted(object arg) {
            if ((this.AssignRoleToLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignRoleToLocationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/RemoveRoleFromLocation", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveRoleFromLocation(string locationId, string roleId) {
            this.Invoke("RemoveRoleFromLocation", new object[] {
                        locationId,
                        roleId});
        }
        
        /// <remarks/>
        public void RemoveRoleFromLocationAsync(string locationId, string roleId) {
            this.RemoveRoleFromLocationAsync(locationId, roleId, null);
        }
        
        /// <remarks/>
        public void RemoveRoleFromLocationAsync(string locationId, string roleId, object userState) {
            if ((this.RemoveRoleFromLocationOperationCompleted == null)) {
                this.RemoveRoleFromLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRoleFromLocationOperationCompleted);
            }
            this.InvokeAsync("RemoveRoleFromLocation", new object[] {
                        locationId,
                        roleId}, this.RemoveRoleFromLocationOperationCompleted, userState);
        }
        
        private void OnRemoveRoleFromLocationOperationCompleted(object arg) {
            if ((this.RemoveRoleFromLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveRoleFromLocationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GeneratePermissionList", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionDefinition[] GeneratePermissionList() {
            object[] results = this.Invoke("GeneratePermissionList", new object[0]);
            return ((PermissionDefinition[])(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePermissionListAsync() {
            this.GeneratePermissionListAsync(null);
        }
        
        /// <remarks/>
        public void GeneratePermissionListAsync(object userState) {
            if ((this.GeneratePermissionListOperationCompleted == null)) {
                this.GeneratePermissionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePermissionListOperationCompleted);
            }
            this.InvokeAsync("GeneratePermissionList", new object[0], this.GeneratePermissionListOperationCompleted, userState);
        }
        
        private void OnGeneratePermissionListOperationCompleted(object arg) {
            if ((this.GeneratePermissionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePermissionListCompleted(this, new GeneratePermissionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/GetApplicationAdmins", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] GetApplicationAdmins() {
            object[] results = this.Invoke("GetApplicationAdmins", new object[0]);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationAdminsAsync() {
            this.GetApplicationAdminsAsync(null);
        }
        
        /// <remarks/>
        public void GetApplicationAdminsAsync(object userState) {
            if ((this.GetApplicationAdminsOperationCompleted == null)) {
                this.GetApplicationAdminsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationAdminsOperationCompleted);
            }
            this.InvokeAsync("GetApplicationAdmins", new object[0], this.GetApplicationAdminsOperationCompleted, userState);
        }
        
        private void OnGetApplicationAdminsOperationCompleted(object arg) {
            if ((this.GetApplicationAdminsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationAdminsCompleted(this, new GetApplicationAdminsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/AddUserToApplicationAdmins", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUserToApplicationAdmins(string userName) {
            this.Invoke("AddUserToApplicationAdmins", new object[] {
                        userName});
        }
        
        /// <remarks/>
        public void AddUserToApplicationAdminsAsync(string userName) {
            this.AddUserToApplicationAdminsAsync(userName, null);
        }
        
        /// <remarks/>
        public void AddUserToApplicationAdminsAsync(string userName, object userState) {
            if ((this.AddUserToApplicationAdminsOperationCompleted == null)) {
                this.AddUserToApplicationAdminsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToApplicationAdminsOperationCompleted);
            }
            this.InvokeAsync("AddUserToApplicationAdmins", new object[] {
                        userName}, this.AddUserToApplicationAdminsOperationCompleted, userState);
        }
        
        private void OnAddUserToApplicationAdminsOperationCompleted(object arg) {
            if ((this.AddUserToApplicationAdminsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToApplicationAdminsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/RemoveUserFromApplicationAdmins", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveUserFromApplicationAdmins(string userName) {
            this.Invoke("RemoveUserFromApplicationAdmins", new object[] {
                        userName});
        }
        
        /// <remarks/>
        public void RemoveUserFromApplicationAdminsAsync(string userName) {
            this.RemoveUserFromApplicationAdminsAsync(userName, null);
        }
        
        /// <remarks/>
        public void RemoveUserFromApplicationAdminsAsync(string userName, object userState) {
            if ((this.RemoveUserFromApplicationAdminsOperationCompleted == null)) {
                this.RemoveUserFromApplicationAdminsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserFromApplicationAdminsOperationCompleted);
            }
            this.InvokeAsync("RemoveUserFromApplicationAdmins", new object[] {
                        userName}, this.RemoveUserFromApplicationAdminsOperationCompleted, userState);
        }
        
        private void OnRemoveUserFromApplicationAdminsOperationCompleted(object arg) {
            if ((this.RemoveUserFromApplicationAdminsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserFromApplicationAdminsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("user")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prometric.com/webservices/intelitest/IsUserApplicationAdmin", RequestNamespace="http://www.prometric.com/webservices/intelitest", ResponseNamespace="http://www.prometric.com/webservices/intelitest", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserApplicationAdmin(string userName) {
            object[] results = this.Invoke("IsUserApplicationAdmin", new object[] {
                        userName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserApplicationAdminAsync(string userName) {
            this.IsUserApplicationAdminAsync(userName, null);
        }
        
        /// <remarks/>
        public void IsUserApplicationAdminAsync(string userName, object userState) {
            if ((this.IsUserApplicationAdminOperationCompleted == null)) {
                this.IsUserApplicationAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserApplicationAdminOperationCompleted);
            }
            this.InvokeAsync("IsUserApplicationAdmin", new object[] {
                        userName}, this.IsUserApplicationAdminOperationCompleted, userState);
        }
        
        private void OnIsUserApplicationAdminOperationCompleted(object arg) {
            if ((this.IsUserApplicationAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserApplicationAdminCompleted(this, new IsUserApplicationAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prometric.com/webservices/intelitest")]
    [System.Xml.Serialization.XmlRootAttribute("user", Namespace="http://www.prometric.com/webservices/intelitest", IsNullable=false)]
    public partial class User : System.Web.Services.Protocols.SoapHeader {
        
        private string currentContextIdField;
        
        private string userNameField;
        
        private string userIdField;
        
        private bool authenticatedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string currentContextId {
            get {
                return this.currentContextIdField;
            }
            set {
                this.currentContextIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool authenticated {
            get {
                return this.authenticatedField;
            }
            set {
                this.authenticatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prometric.com/webservices/intelitest")]
    public partial class PermissionDefinition {
        
        private string nameField;
        
        private string uUIDField;
        
        private string permissionTypeField;
        
        private string objectTypeField;
        
        private string descriptionField;
        
        private string createdOnField;
        
        private string createdByField;
        
        private string updatedOnField;
        
        private string updatedByField;
        
        private int displayOrdinalField;
        
        private bool requiredIndField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string UUID {
            get {
                return this.uUIDField;
            }
            set {
                this.uUIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string permissionType {
            get {
                return this.permissionTypeField;
            }
            set {
                this.permissionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string createdOn {
            get {
                return this.createdOnField;
            }
            set {
                this.createdOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string updatedOn {
            get {
                return this.updatedOnField;
            }
            set {
                this.updatedOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string updatedBy {
            get {
                return this.updatedByField;
            }
            set {
                this.updatedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int displayOrdinal {
            get {
                return this.displayOrdinalField;
            }
            set {
                this.displayOrdinalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool requiredInd {
            get {
                return this.requiredIndField;
            }
            set {
                this.requiredIndField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prometric.com/webservices/intelitest")]
    public partial class Role {
        
        private string roleNameField;
        
        private Folder roleFolderField;
        
        private string roleIdField;
        
        private FolderAttribute[] attributesField;
        
        private bool isFolderRoleField;
        
        /// <remarks/>
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
        
        /// <remarks/>
        public Folder roleFolder {
            get {
                return this.roleFolderField;
            }
            set {
                this.roleFolderField = value;
            }
        }
        
        /// <remarks/>
        public string RoleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        public FolderAttribute[] Attributes {
            get {
                return this.attributesField;
            }
            set {
                this.attributesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFolderRole {
            get {
                return this.isFolderRoleField;
            }
            set {
                this.isFolderRoleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Context))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prometric.com/webservices/intelitest")]
    public partial class Folder {
        
        private string folderNameField;
        
        private string folderIdField;
        
        private string folderTypeIdField;
        
        private string folderTypeNameField;
        
        private bool isLockedField;
        
        private bool isHiddenField;
        
        private bool isSystemField;
        
        private System.DateTime utcCreateDateTimeField;
        
        private System.DateTime utcLockedDateTimeField;
        
        private System.DateTime utcModifiedDateTimeField;
        
        private string createUserField;
        
        private string modifiedUserField;
        
        /// <remarks/>
        public string FolderName {
            get {
                return this.folderNameField;
            }
            set {
                this.folderNameField = value;
            }
        }
        
        /// <remarks/>
        public string FolderId {
            get {
                return this.folderIdField;
            }
            set {
                this.folderIdField = value;
            }
        }
        
        /// <remarks/>
        public string FolderTypeId {
            get {
                return this.folderTypeIdField;
            }
            set {
                this.folderTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string FolderTypeName {
            get {
                return this.folderTypeNameField;
            }
            set {
                this.folderTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLocked {
            get {
                return this.isLockedField;
            }
            set {
                this.isLockedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsHidden {
            get {
                return this.isHiddenField;
            }
            set {
                this.isHiddenField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSystem {
            get {
                return this.isSystemField;
            }
            set {
                this.isSystemField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime utcCreateDateTime {
            get {
                return this.utcCreateDateTimeField;
            }
            set {
                this.utcCreateDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime utcLockedDateTime {
            get {
                return this.utcLockedDateTimeField;
            }
            set {
                this.utcLockedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime utcModifiedDateTime {
            get {
                return this.utcModifiedDateTimeField;
            }
            set {
                this.utcModifiedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedUser {
            get {
                return this.modifiedUserField;
            }
            set {
                this.modifiedUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prometric.com/webservices/intelitest")]
    public partial class Context : Folder {
        
        private string contextIdField;
        
        private string contextNameField;
        
        private string statisticsUserField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string contextId {
            get {
                return this.contextIdField;
            }
            set {
                this.contextIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string contextName {
            get {
                return this.contextNameField;
            }
            set {
                this.contextNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string statisticsUser {
            get {
                return this.statisticsUserField;
            }
            set {
                this.statisticsUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserDemographic))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prometric.com/webservices/intelitest")]
    public partial class FolderAttribute {
        
        private string folderAttributeIdField;
        
        private string folderIdField;
        
        private string attributeField;
        
        private string valueField;
        
        private string createUserField;
        
        private string modifiedUserField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FolderAttributeId {
            get {
                return this.folderAttributeIdField;
            }
            set {
                this.folderAttributeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FolderId {
            get {
                return this.folderIdField;
            }
            set {
                this.folderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Attribute {
            get {
                return this.attributeField;
            }
            set {
                this.attributeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CreateUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ModifiedUser {
            get {
                return this.modifiedUserField;
            }
            set {
                this.modifiedUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prometric.com/webservices/intelitest")]
    public partial class UserDemographic : FolderAttribute {
        
        private string userDemographicIdField;
        
        private string demographicNameField;
        
        private string userIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string userDemographicId {
            get {
                return this.userDemographicIdField;
            }
            set {
                this.userDemographicIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string demographicName {
            get {
                return this.demographicNameField;
            }
            set {
                this.demographicNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prometric.com/webservices/intelitest")]
    public partial class KeyValuePairSerializable {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prometric.com/webservices/intelitest")]
    public partial class UserWithDemographics {
        
        private User userField;
        
        private UserDemographic[] demographicsField;
        
        /// <remarks/>
        public User User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public UserDemographic[] Demographics {
            get {
                return this.demographicsField;
            }
            set {
                this.demographicsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prometric.com/webservices/intelitest")]
    public enum PasswordComplexity {
        
        /// <remarks/>
        Passed = 1,
        
        /// <remarks/>
        NotLongEnough = 2,
        
        /// <remarks/>
        NotEnoughNonAlpha = 4,
        
        /// <remarks/>
        FailedRegex = 8,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateUserCompletedEventHandler(object sender, CreateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AuthenticateUserCompletedEventHandler(object sender, AuthenticateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool passwordExpiringSoon {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int passwordWillExpireInDays {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddUserToContextCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPasswordComplexityCompletedEventHandler(object sender, GetPasswordComplexityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPasswordComplexityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPasswordComplexityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int minRequiredNonalphanumericCharacters {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int minRequiredPasswordLength {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void IsPasswordComplexityValidCompletedEventHandler(object sender, IsPasswordComplexityValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsPasswordComplexityValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsPasswordComplexityValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PasswordComplexity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PasswordComplexity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserContextsCompletedEventHandler(object sender, GetUserContextsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserContextsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserContextsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Context[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Context[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllContextsCompletedEventHandler(object sender, GetAllContextsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllContextsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllContextsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Context[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Context[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UserNameMatchesEmailAddressCompletedEventHandler(object sender, UserNameMatchesEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserNameMatchesEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserNameMatchesEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendPasswordResetEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void IsValidResetUrlCompletedEventHandler(object sender, IsValidResetUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidResetUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidResetUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UserNameMatchesSecurityTokenCompletedEventHandler(object sender, UserNameMatchesSecurityTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserNameMatchesSecurityTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserNameMatchesSecurityTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CleanContextCompletedEventHandler(object sender, CleanContextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CleanContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CleanContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void IsLockedOutCompletedEventHandler(object sender, IsLockedOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsLockedOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsLockedOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UnlockUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SapUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ResetUserPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SecureResetUserPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserListCompletedEventHandler(object sender, GetUserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserWithDemographics[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserWithDemographics[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetGlobalUserListCompletedEventHandler(object sender, GetGlobalUserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserWithDemographics[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserWithDemographics[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserListGivenRoleCompletedEventHandler(object sender, GetUserListGivenRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserListGivenRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserListGivenRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserWithDemographics[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserWithDemographics[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GenerateContextCompletedEventHandler(object sender, GenerateContextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GenerateUserInContextCompletedEventHandler(object sender, GenerateUserInContextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateUserInContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateUserInContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddUsersToContextCompletedEventHandler(object sender, AddUsersToContextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUsersToContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUsersToContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteUserFromContextCompletedEventHandler(object sender, DeleteUserFromContextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserFromContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserFromContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLocationRolesCompletedEventHandler(object sender, GetLocationRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLocationRolesIncludingInheritedCompletedEventHandler(object sender, GetLocationRolesIncludingInheritedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationRolesIncludingInheritedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationRolesIncludingInheritedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRolePermissionsCompletedEventHandler(object sender, GetRolePermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRolePermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRolePermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionDefinition[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionDefinition[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserPermissionsAtLocationCompletedEventHandler(object sender, GetUserPermissionsAtLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPermissionsAtLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPermissionsAtLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionDefinition[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionDefinition[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserPermissionsForNonFoldersCompletedEventHandler(object sender, GetUserPermissionsForNonFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPermissionsForNonFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPermissionsForNonFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionDefinition[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionDefinition[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateFolderRoleCompletedEventHandler(object sender, CreateFolderRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFolderRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFolderRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateNonFolderRoleCompletedEventHandler(object sender, CreateNonFolderRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNonFolderRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNonFolderRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateContextAdminRoleCompletedEventHandler(object sender, CreateContextAdminRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateContextAdminRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateContextAdminRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetRolePermissionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContextNonFolderRolesCompletedEventHandler(object sender, GetContextNonFolderRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContextNonFolderRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContextNonFolderRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContextAdminRolesCompletedEventHandler(object sender, GetContextAdminRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContextAdminRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContextAdminRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContextFolderRolesCompletedEventHandler(object sender, GetContextFolderRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContextFolderRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContextFolderRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AssignUserToRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveUserFromRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AssignRoleToLocationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveRoleFromLocationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GeneratePermissionListCompletedEventHandler(object sender, GeneratePermissionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePermissionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePermissionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionDefinition[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionDefinition[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetApplicationAdminsCompletedEventHandler(object sender, GetApplicationAdminsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationAdminsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationAdminsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddUserToApplicationAdminsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveUserFromApplicationAdminsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void IsUserApplicationAdminCompletedEventHandler(object sender, IsUserApplicationAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserApplicationAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserApplicationAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591